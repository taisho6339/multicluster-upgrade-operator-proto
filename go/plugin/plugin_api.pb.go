// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: src/plugin/plugin_api.proto

package plugin

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type OperationStatusType int32

const (
	OperationStatusType_UNKNOWN OperationStatusType = 0
	OperationStatusType_RUNNING OperationStatusType = 1
	OperationStatusType_DONE    OperationStatusType = 2
	OperationStatusType_FAILED  OperationStatusType = 3
)

// Enum value maps for OperationStatusType.
var (
	OperationStatusType_name = map[int32]string{
		0: "UNKNOWN",
		1: "RUNNING",
		2: "DONE",
		3: "FAILED",
	}
	OperationStatusType_value = map[string]int32{
		"UNKNOWN": 0,
		"RUNNING": 1,
		"DONE":    2,
		"FAILED":  3,
	}
)

func (x OperationStatusType) Enum() *OperationStatusType {
	p := new(OperationStatusType)
	*p = x
	return p
}

func (x OperationStatusType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OperationStatusType) Descriptor() protoreflect.EnumDescriptor {
	return file_src_plugin_plugin_api_proto_enumTypes[0].Descriptor()
}

func (OperationStatusType) Type() protoreflect.EnumType {
	return &file_src_plugin_plugin_api_proto_enumTypes[0]
}

func (x OperationStatusType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OperationStatusType.Descriptor instead.
func (OperationStatusType) EnumDescriptor() ([]byte, []int) {
	return file_src_plugin_plugin_api_proto_rawDescGZIP(), []int{0}
}

type ClusterStatusType int32

const (
	ClusterStatusType_STATUS_SERVICE_IN  ClusterStatusType = 0
	ClusterStatusType_STATUS_SERVICE_OUT ClusterStatusType = 1
)

// Enum value maps for ClusterStatusType.
var (
	ClusterStatusType_name = map[int32]string{
		0: "STATUS_SERVICE_IN",
		1: "STATUS_SERVICE_OUT",
	}
	ClusterStatusType_value = map[string]int32{
		"STATUS_SERVICE_IN":  0,
		"STATUS_SERVICE_OUT": 1,
	}
)

func (x ClusterStatusType) Enum() *ClusterStatusType {
	p := new(ClusterStatusType)
	*p = x
	return p
}

func (x ClusterStatusType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ClusterStatusType) Descriptor() protoreflect.EnumDescriptor {
	return file_src_plugin_plugin_api_proto_enumTypes[1].Descriptor()
}

func (ClusterStatusType) Type() protoreflect.EnumType {
	return &file_src_plugin_plugin_api_proto_enumTypes[1]
}

func (x ClusterStatusType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ClusterStatusType.Descriptor instead.
func (ClusterStatusType) EnumDescriptor() ([]byte, []int) {
	return file_src_plugin_plugin_api_proto_rawDescGZIP(), []int{1}
}

type GetVersionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// For GKE, "projects/%s/locations/%s/clusters/%s"
	ClusterID string `protobuf:"bytes,1,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
}

func (x *GetVersionRequest) Reset() {
	*x = GetVersionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_plugin_plugin_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVersionRequest) ProtoMessage() {}

func (x *GetVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_plugin_plugin_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVersionRequest.ProtoReflect.Descriptor instead.
func (*GetVersionRequest) Descriptor() ([]byte, []int) {
	return file_src_plugin_plugin_api_proto_rawDescGZIP(), []int{0}
}

func (x *GetVersionRequest) GetClusterID() string {
	if x != nil {
		return x.ClusterID
	}
	return ""
}

type GetClusterStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// For GKE, "projects/%s/locations/%s/clusters/%s"
	ClusterID string `protobuf:"bytes,1,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
}

func (x *GetClusterStatusRequest) Reset() {
	*x = GetClusterStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_plugin_plugin_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClusterStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClusterStatusRequest) ProtoMessage() {}

func (x *GetClusterStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_plugin_plugin_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClusterStatusRequest.ProtoReflect.Descriptor instead.
func (*GetClusterStatusRequest) Descriptor() ([]byte, []int) {
	return file_src_plugin_plugin_api_proto_rawDescGZIP(), []int{1}
}

func (x *GetClusterStatusRequest) GetClusterID() string {
	if x != nil {
		return x.ClusterID
	}
	return ""
}

type GetOperationStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// For GKE, "projects/%s/locations/%s/clusters/%s"
	ClusterID   string `protobuf:"bytes,1,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	OperationID string `protobuf:"bytes,2,opt,name=operationID,proto3" json:"operationID,omitempty"`
	Type        string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *GetOperationStatusRequest) Reset() {
	*x = GetOperationStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_plugin_plugin_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOperationStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOperationStatusRequest) ProtoMessage() {}

func (x *GetOperationStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_plugin_plugin_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOperationStatusRequest.ProtoReflect.Descriptor instead.
func (*GetOperationStatusRequest) Descriptor() ([]byte, []int) {
	return file_src_plugin_plugin_api_proto_rawDescGZIP(), []int{2}
}

func (x *GetOperationStatusRequest) GetClusterID() string {
	if x != nil {
		return x.ClusterID
	}
	return ""
}

func (x *GetOperationStatusRequest) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *GetOperationStatusRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type ServiceInRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// For GKE, "projects/%s/locations/%s/clusters/%s"
	ClusterID string `protobuf:"bytes,1,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
}

func (x *ServiceInRequest) Reset() {
	*x = ServiceInRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_plugin_plugin_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceInRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceInRequest) ProtoMessage() {}

func (x *ServiceInRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_plugin_plugin_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceInRequest.ProtoReflect.Descriptor instead.
func (*ServiceInRequest) Descriptor() ([]byte, []int) {
	return file_src_plugin_plugin_api_proto_rawDescGZIP(), []int{3}
}

func (x *ServiceInRequest) GetClusterID() string {
	if x != nil {
		return x.ClusterID
	}
	return ""
}

type ServiceOutRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// For GKE, "projects/%s/locations/%s/clusters/%s"
	ClusterID string `protobuf:"bytes,1,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
}

func (x *ServiceOutRequest) Reset() {
	*x = ServiceOutRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_plugin_plugin_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceOutRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceOutRequest) ProtoMessage() {}

func (x *ServiceOutRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_plugin_plugin_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceOutRequest.ProtoReflect.Descriptor instead.
func (*ServiceOutRequest) Descriptor() ([]byte, []int) {
	return file_src_plugin_plugin_api_proto_rawDescGZIP(), []int{4}
}

func (x *ServiceOutRequest) GetClusterID() string {
	if x != nil {
		return x.ClusterID
	}
	return ""
}

type Operation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type        string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	OperationID string `protobuf:"bytes,2,opt,name=operationID,proto3" json:"operationID,omitempty"`
}

func (x *Operation) Reset() {
	*x = Operation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_plugin_plugin_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Operation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Operation) ProtoMessage() {}

func (x *Operation) ProtoReflect() protoreflect.Message {
	mi := &file_src_plugin_plugin_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Operation.ProtoReflect.Descriptor instead.
func (*Operation) Descriptor() ([]byte, []int) {
	return file_src_plugin_plugin_api_proto_rawDescGZIP(), []int{5}
}

func (x *Operation) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Operation) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

type OperationStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status OperationStatusType `protobuf:"varint,1,opt,name=status,proto3,enum=plugin.OperationStatusType" json:"status,omitempty"`
}

func (x *OperationStatus) Reset() {
	*x = OperationStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_plugin_plugin_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperationStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperationStatus) ProtoMessage() {}

func (x *OperationStatus) ProtoReflect() protoreflect.Message {
	mi := &file_src_plugin_plugin_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperationStatus.ProtoReflect.Descriptor instead.
func (*OperationStatus) Descriptor() ([]byte, []int) {
	return file_src_plugin_plugin_api_proto_rawDescGZIP(), []int{6}
}

func (x *OperationStatus) GetStatus() OperationStatusType {
	if x != nil {
		return x.Status
	}
	return OperationStatusType_UNKNOWN
}

type ClusterStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// tye type which tells operator whether this cluster is routed currently
	Status ClusterStatusType `protobuf:"varint,1,opt,name=status,proto3,enum=plugin.ClusterStatusType" json:"status,omitempty"`
	// the flag which tells operator whether this cluster can be routed
	IsAvailable bool `protobuf:"varint,2,opt,name=isAvailable,proto3" json:"isAvailable,omitempty"`
}

func (x *ClusterStatus) Reset() {
	*x = ClusterStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_plugin_plugin_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClusterStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterStatus) ProtoMessage() {}

func (x *ClusterStatus) ProtoReflect() protoreflect.Message {
	mi := &file_src_plugin_plugin_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterStatus.ProtoReflect.Descriptor instead.
func (*ClusterStatus) Descriptor() ([]byte, []int) {
	return file_src_plugin_plugin_api_proto_rawDescGZIP(), []int{7}
}

func (x *ClusterStatus) GetStatus() ClusterStatusType {
	if x != nil {
		return x.Status
	}
	return ClusterStatusType_STATUS_SERVICE_IN
}

func (x *ClusterStatus) GetIsAvailable() bool {
	if x != nil {
		return x.IsAvailable
	}
	return false
}

type ClusterVersion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Master    *MasterVersion     `protobuf:"bytes,1,opt,name=master,proto3" json:"master,omitempty"`
	NodePools []*NodePoolVersion `protobuf:"bytes,2,rep,name=nodePools,proto3" json:"nodePools,omitempty"`
}

func (x *ClusterVersion) Reset() {
	*x = ClusterVersion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_plugin_plugin_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClusterVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterVersion) ProtoMessage() {}

func (x *ClusterVersion) ProtoReflect() protoreflect.Message {
	mi := &file_src_plugin_plugin_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterVersion.ProtoReflect.Descriptor instead.
func (*ClusterVersion) Descriptor() ([]byte, []int) {
	return file_src_plugin_plugin_api_proto_rawDescGZIP(), []int{8}
}

func (x *ClusterVersion) GetMaster() *MasterVersion {
	if x != nil {
		return x.Master
	}
	return nil
}

func (x *ClusterVersion) GetNodePools() []*NodePoolVersion {
	if x != nil {
		return x.NodePools
	}
	return nil
}

type MasterVersion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClusterID string `protobuf:"bytes,1,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	Version   string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *MasterVersion) Reset() {
	*x = MasterVersion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_plugin_plugin_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MasterVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MasterVersion) ProtoMessage() {}

func (x *MasterVersion) ProtoReflect() protoreflect.Message {
	mi := &file_src_plugin_plugin_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MasterVersion.ProtoReflect.Descriptor instead.
func (*MasterVersion) Descriptor() ([]byte, []int) {
	return file_src_plugin_plugin_api_proto_rawDescGZIP(), []int{9}
}

func (x *MasterVersion) GetClusterID() string {
	if x != nil {
		return x.ClusterID
	}
	return ""
}

func (x *MasterVersion) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type NodePoolVersion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClusterID  string `protobuf:"bytes,1,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	NodePoolID string `protobuf:"bytes,2,opt,name=nodePoolID,proto3" json:"nodePoolID,omitempty"`
	Version    string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *NodePoolVersion) Reset() {
	*x = NodePoolVersion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_plugin_plugin_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodePoolVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodePoolVersion) ProtoMessage() {}

func (x *NodePoolVersion) ProtoReflect() protoreflect.Message {
	mi := &file_src_plugin_plugin_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodePoolVersion.ProtoReflect.Descriptor instead.
func (*NodePoolVersion) Descriptor() ([]byte, []int) {
	return file_src_plugin_plugin_api_proto_rawDescGZIP(), []int{10}
}

func (x *NodePoolVersion) GetClusterID() string {
	if x != nil {
		return x.ClusterID
	}
	return ""
}

func (x *NodePoolVersion) GetNodePoolID() string {
	if x != nil {
		return x.NodePoolID
	}
	return ""
}

func (x *NodePoolVersion) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

var File_src_plugin_plugin_api_proto protoreflect.FileDescriptor

var file_src_plugin_plugin_api_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x73, 0x72, 0x63, 0x2f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2f, 0x70, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x70,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x31, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x49, 0x44, 0x22, 0x37, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x44, 0x22, 0x6f,
	0x0a, 0x19, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22,
	0x30, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49,
	0x44, 0x22, 0x31, 0x0a, 0x11, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x75, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x49, 0x44, 0x22, 0x41, 0x0a, 0x09, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0x46, 0x0a, 0x0f, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x33, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x70, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0x64, 0x0a, 0x0d, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x31, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x19, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x73, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x41, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x76, 0x0a, 0x0e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x06, 0x6d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x2e, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x06,
	0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x12, 0x35, 0x0a, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x50, 0x6f,
	0x6f, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x73, 0x22, 0x47, 0x0a,
	0x0d, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x69, 0x0a, 0x0f, 0x4e, 0x6f, 0x64, 0x65, 0x50, 0x6f,
	0x6f, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x6f, 0x64, 0x65, 0x50,
	0x6f, 0x6f, 0x6c, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x6f, 0x64,
	0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x2a, 0x45, 0x0a, 0x13, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47,
	0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x4f, 0x4e, 0x45, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06,
	0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x03, 0x2a, 0x42, 0x0a, 0x11, 0x43, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a,
	0x11, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f,
	0x49, 0x4e, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53,
	0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x4f, 0x55, 0x54, 0x10, 0x01, 0x32, 0xa7, 0x04, 0x0a,
	0x07, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x3f, 0x0a, 0x0b, 0x48, 0x65, 0x61, 0x6c,
	0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x0a, 0x47, 0x65, 0x74,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x2e, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x43, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x10,
	0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1f, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x15, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x21, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x00, 0x12, 0x3a,
	0x0a, 0x09, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x12, 0x18, 0x2e, 0x70, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x0a, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x75, 0x74, 0x12, 0x19, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x0d, 0x55, 0x70, 0x67, 0x72,
	0x61, 0x64, 0x65, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x12, 0x15, 0x2e, 0x70, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x2e, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x1a, 0x11, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x0f, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65,
	0x4e, 0x6f, 0x64, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x12, 0x17, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x1a, 0x11, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x00, 0x42, 0x45, 0x5a, 0x43, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x61, 0x69, 0x73, 0x68, 0x6f, 0x36, 0x33, 0x33, 0x39, 0x2f,
	0x6d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2d, 0x75, 0x70, 0x67,
	0x72, 0x61, 0x64, 0x65, 0x2d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2d, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_src_plugin_plugin_api_proto_rawDescOnce sync.Once
	file_src_plugin_plugin_api_proto_rawDescData = file_src_plugin_plugin_api_proto_rawDesc
)

func file_src_plugin_plugin_api_proto_rawDescGZIP() []byte {
	file_src_plugin_plugin_api_proto_rawDescOnce.Do(func() {
		file_src_plugin_plugin_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_src_plugin_plugin_api_proto_rawDescData)
	})
	return file_src_plugin_plugin_api_proto_rawDescData
}

var file_src_plugin_plugin_api_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_src_plugin_plugin_api_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_src_plugin_plugin_api_proto_goTypes = []interface{}{
	(OperationStatusType)(0),          // 0: plugin.OperationStatusType
	(ClusterStatusType)(0),            // 1: plugin.ClusterStatusType
	(*GetVersionRequest)(nil),         // 2: plugin.GetVersionRequest
	(*GetClusterStatusRequest)(nil),   // 3: plugin.GetClusterStatusRequest
	(*GetOperationStatusRequest)(nil), // 4: plugin.GetOperationStatusRequest
	(*ServiceInRequest)(nil),          // 5: plugin.ServiceInRequest
	(*ServiceOutRequest)(nil),         // 6: plugin.ServiceOutRequest
	(*Operation)(nil),                 // 7: plugin.Operation
	(*OperationStatus)(nil),           // 8: plugin.OperationStatus
	(*ClusterStatus)(nil),             // 9: plugin.ClusterStatus
	(*ClusterVersion)(nil),            // 10: plugin.ClusterVersion
	(*MasterVersion)(nil),             // 11: plugin.MasterVersion
	(*NodePoolVersion)(nil),           // 12: plugin.NodePoolVersion
	(*emptypb.Empty)(nil),             // 13: google.protobuf.Empty
}
var file_src_plugin_plugin_api_proto_depIdxs = []int32{
	0,  // 0: plugin.OperationStatus.status:type_name -> plugin.OperationStatusType
	1,  // 1: plugin.ClusterStatus.status:type_name -> plugin.ClusterStatusType
	11, // 2: plugin.ClusterVersion.master:type_name -> plugin.MasterVersion
	12, // 3: plugin.ClusterVersion.nodePools:type_name -> plugin.NodePoolVersion
	13, // 4: plugin.Cluster.HealthCheck:input_type -> google.protobuf.Empty
	2,  // 5: plugin.Cluster.GetVersion:input_type -> plugin.GetVersionRequest
	3,  // 6: plugin.Cluster.GetClusterStatus:input_type -> plugin.GetClusterStatusRequest
	4,  // 7: plugin.Cluster.GetOperationStatus:input_type -> plugin.GetOperationStatusRequest
	5,  // 8: plugin.Cluster.ServiceIn:input_type -> plugin.ServiceInRequest
	6,  // 9: plugin.Cluster.ServiceOut:input_type -> plugin.ServiceOutRequest
	11, // 10: plugin.Cluster.UpgradeMaster:input_type -> plugin.MasterVersion
	12, // 11: plugin.Cluster.UpgradeNodePool:input_type -> plugin.NodePoolVersion
	13, // 12: plugin.Cluster.HealthCheck:output_type -> google.protobuf.Empty
	10, // 13: plugin.Cluster.GetVersion:output_type -> plugin.ClusterVersion
	9,  // 14: plugin.Cluster.GetClusterStatus:output_type -> plugin.ClusterStatus
	8,  // 15: plugin.Cluster.GetOperationStatus:output_type -> plugin.OperationStatus
	7,  // 16: plugin.Cluster.ServiceIn:output_type -> plugin.Operation
	7,  // 17: plugin.Cluster.ServiceOut:output_type -> plugin.Operation
	7,  // 18: plugin.Cluster.UpgradeMaster:output_type -> plugin.Operation
	7,  // 19: plugin.Cluster.UpgradeNodePool:output_type -> plugin.Operation
	12, // [12:20] is the sub-list for method output_type
	4,  // [4:12] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_src_plugin_plugin_api_proto_init() }
func file_src_plugin_plugin_api_proto_init() {
	if File_src_plugin_plugin_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_src_plugin_plugin_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVersionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_plugin_plugin_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClusterStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_plugin_plugin_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOperationStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_plugin_plugin_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceInRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_plugin_plugin_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceOutRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_plugin_plugin_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Operation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_plugin_plugin_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperationStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_plugin_plugin_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClusterStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_plugin_plugin_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClusterVersion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_plugin_plugin_api_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MasterVersion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_plugin_plugin_api_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodePoolVersion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_src_plugin_plugin_api_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_src_plugin_plugin_api_proto_goTypes,
		DependencyIndexes: file_src_plugin_plugin_api_proto_depIdxs,
		EnumInfos:         file_src_plugin_plugin_api_proto_enumTypes,
		MessageInfos:      file_src_plugin_plugin_api_proto_msgTypes,
	}.Build()
	File_src_plugin_plugin_api_proto = out.File
	file_src_plugin_plugin_api_proto_rawDesc = nil
	file_src_plugin_plugin_api_proto_goTypes = nil
	file_src_plugin_plugin_api_proto_depIdxs = nil
}
